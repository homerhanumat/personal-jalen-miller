---
title:  "Groups"
format:
  html: 
    grid:
      sidebar-width: 250px
      body-width: 450px
      margin-width: 600px
      gutter-width: 1.5rem
    page-layout: full
---

Here is a problem where I will create a new class called Groups!

The original problem as the student to create a class called "Group". The question asked that this class contains different methods like add and delete. The ultimate goal here was to give the class a static from method that takes an iterable object as argument and creates a group that contains all the values produced by iterating over it.

To begin this problem I, created a new group that contained an empty array for storing some elements.

```js
class Group {
    constructor(){
      this.element = [];
    }
```

 Next, I incorporated the add method that would allow me to see if there was existence of a value using the 'has' method. Since I incorporated the add method, it was only correct to incorporate the delete mmethod next. The delete method removes a specified element from the group by filtering out the array elements that are not equal to the provided value. The final method I added to this function was the 'has' method. This last method checks whether the provided value exists in the 'Group' instance. It returns 'true' if the element is present and 'false' if it is not.

 ```js
 add(val){
      if (!this.has(val)) {
        this.element.push(val);
      }
    }
    delete(val){
      this.element = this.element.filter(v => v !== val);
    }
    has(val){
      return this.element.includes(val);
    }
 ```

 The last chunck of this code refers to the 'static from' method. This is a method that creates a new 'Group' instance from an iterable collection. It takes a collection as an argument and adds each value from the collection to the newly created 'Group' instance using the 'add' method.

 ```js
 static from(collection) {
      let group = new Group;
      for (let val of collection) {
        group.add(val);
      }
      return group;
    }
  }
 ```

 Overall, this class called 'Group' will provides a function to manage over a collection of different, unique values. Through different methods within the code, the construction of this allows the code to check and see if there is a presence of certain elements already in the code, of if they need to be added.

 A few examples of this could be shown here: 

 ```js
 let group = Group.from([10, 20]);
  console.log(group.has(22));
  console.log(group.has(10));
 ```

 The output of these would be as followed: 

 false
 true